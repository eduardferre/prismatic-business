---
import ThemeToggle from './ThemeToggle.astro'
import '@/styles/global.css'

const navItems = [
  {
    title: 'Experience',
    label: 'experience',
    url: '/#experience'
  },
  {
    title: 'Projects',
    label: 'projects',
    url: '/#projects'
  },
  {
    title: 'About Me',
    label: 'about-me',
    url: '/#about-me'
  },
  {
    title: 'Contact',
    label: 'contact',
    url: 'mailto:eduardferresanchez@gmail.com'
  }
]
---

<div
  class="flex flex-col w-full border-b fixed left-0 top-0 z-30"
  id="nav-container"
>
  <div class="flex w-full mx-auto items-center justify-center">
    <div class="flex w-full items-center container h-16">
      <header class="flex w-full justify-center items-center h-16">
        <div class="flex flex-auto justify-start">
          <a
            href="/"
            class="flex items-center gap-2 align-middle primary-focus"
            aria-label="Home"
          >
            <img
              id="themeImage"
              src="/src/assets/prismatic.png"
              width="100"
              class="aspect-auto w-14 dark:hidden"
              alt="Prismatic Logo"
            />
            <img
              id="themeImage"
              src="/src/assets/prismatic-dark.png"
              width="100"
              class="aspect-auto w-14 hidden dark:block"
              alt="Prismatic Logo"
            />
            <span class="text-2xl ">Prismatic</span>
          </a>
        </div>

        <div class="flex justify-end flex-auto items-center">
          <nav class="md:flex">
            {
              navItems.map((link) => (
                <ul class="flex items-center h-fit px-4">
                  <li>
                    <a
                      class="relative block px-2 py-2 transition hover:text-purple-900 dark:hover:text-purple-600 sm:px-4 md:px-6"
                      aria-label={link.label}
                      href={link.url}
                    >
                      {link.title}
                    </a>
                  </li>
                </ul>
              ))
            }
          </nav>
        </div>
      </header>
    </div>
  </div>
</div>
<script>
  document.addEventListener('astro:page-load', () => {
    const sections = document.querySelectorAll('section')
    const navItems = document.querySelectorAll('header nav a')

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute('aria-label') == entry.target.id) {
              item.classList.add('text-purple-600')
            } else {
              item.classList.remove('text-purple-600')
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: '0px',
      threshold: 0.3
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === 'hidden') {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  .container {
    margin-left: 0;
    margin-right: 0;
    max-width: 72rem;
    padding-left: 1rem;
    padding-right: 1rem;
  }

  #nav-container {
    background-color: transparent;
    border-bottom-color: transparent;
    border-bottom
    justify-content: center;
    align-items: center;
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    from {
      background-color: rgba(31, 41, 55, 0);
      background-color: rgba(255, 255, 255, 0);
    }
    to {
      box-shadow:
        0 10px 15px -3px rgba(0, 0, 0, 0.1),
        0 4px 6px -2px rgba(255, 255, 255, 0.05);
      backdrop-filter: blur(10px);
      ring: 1px solid rgba(255, 255, 255, 0.1);
      border-bottom-color: rgba(255, 255, 255, 0.1);
    }
  }
</style>
